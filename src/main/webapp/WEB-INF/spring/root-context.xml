<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- root-context.xml은 웹과 관련되지 않은 자원들에 대한 설정을 입력하는 곳 -->
	<!-- 아래 Namespaces에서 aop/beans/context/jdbc/mybatis-spring을 체크해줌. 사용가능한 XML폭 넓히기 위함 -->
	
	<!-- MySQL dataSource, context-datasource에 있는거 복사함 -->
	<!-- dataSource는 MySQL과 연결을 담당한다. DataSource는 JDBC 커넥션을 처리하는 기능을 가지고 있기에 DB와 연동하는 작업에 반드시 필요하다.-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/cptree?useSSL=false"/>
		<property name="username" value="cptreeadmin"/>
		<property name="password" value="cptreeadmin"/>
	</bean>
	
	<!-- mybatis SqlSessionFactoryBean context-mapper.xml에 있던거 복사 후 수정함-->
	<!-- DB와의 연결과 SQL의 실행에 대한 모든 것을 가진 객체-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- bean 등록 -->
		<!-- MemberDaoImpl에 @Repository 어노테이션이 설정되었더라도 스프링에서 해당 패키지를 스캔하지 않으면 스프링 빈으로 등록되지 않는다.
		그렇기에 root-context.xml에 빈 등록을 해야한다. -->
	<context:component-scan base-package="com.cp.cptree.dao"></context:component-scan>
	<context:component-scan base-package="com.cp.cptree.service"></context:component-scan>
	
</beans>
